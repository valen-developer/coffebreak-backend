
  
version: '3'

services:
  traefik:
    image: traefik:1.7.34-alpine
    container_name: traefik
    command: --docker
    ports:
      - "80:80"
      - "443:443"
    networks:
      - coffebreak
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - ./traefik/traefik.toml:/traefik.toml # Traefik configuration file
      - ./traefik/acme:/acme   
    restart: always         

  fail2ban:
    image: crazymax/fail2ban:latest
    container_name: fail2ban
    restart: "unless-stopped"
    network_mode: "host"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - "./fail2ban-data:/data"
      - "/var/log:/var/log:ro"
      - "/var/lib/docker/containers/:/container-logs/:ro"
    env_file:
      - "./fail2ban.env"
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "10"



  backend:
    build:
      context: .
      dockerfile: Dockerfile.$ENVIROMENT
    image: backend:latest
    container_name: backend
    environment:
      - PORT=3000
      - VIRTUAL_PROTO=https
      - VIRTUAL_PORT=443
      - VIRTUAL_HOST=api.coffeebreakpodcast.app,www.api.coffeebreakpodcast.app
      - LETSENCRYPT_HOST=api.coffeebreakpodcast.app,www.api.coffeebreakpodcast.app
      - LETSENCRYPT_EMAIL=valentin@valentinvalverde.com
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:api.coffeebreakpodcast.app"
    expose:
      - 3000
    volumes:
      - images:/app/images:rw
      - temp:/app/temp:rw
    restart: always
    networks:
      coffebreak:
        aliases:
          - backend

  mongo:
    image: mongo:latest
    container_name: coffebreak-db
    restart: always
    expose:
      - 27017
    volumes:
      - mongo:/data/db:rw
    env_file:
      - .env
    networks:
      coffebreak:
        aliases:
          - mongo

networks:
  coffebreak:
    driver: bridge
    name: coffebreak
    

volumes:
  certs:
  vhostd:
  html:
  images:
  temp:
  mongo: